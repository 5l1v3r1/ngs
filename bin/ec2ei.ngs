#!/usr/bin/env ngs

if not(ARGV) {
	die([
		"Usage: ${ARGV0} your command"
		"       ${ARGV0} will run your command in parallel for all instances in all regions"
		"       with PublicIpAddress as last argument"
	])
}

instances = AWS::regions(F(r) {
	``aws ec2 describe-instances --region $r --filter Name=instance-state-name,Values=running``
}).filter(X.has('PublicIpAddress'))

echo "# Found ${instances.len()} instances in ${instances.group(F(i) i.Placement.AvailabilityZone).len()} AZs"

have_placeholder = 'IP' in ARGV

results = instances.pmap(F(i) {
	argv = if have_placeholder {
		ARGV.replace('IP', i.PublicIpAddress)
	} else {
		ARGV + [i.PublicIpAddress]
	}
	[i, `$*argv`]
})

each(results, F(r) {
	echo("==================== ${r[0].PublicIpAddress} - ${r[0].Placement.AvailabilityZone} ====================")
	("[${r[0].PublicIpAddress}] " + r[1].lines()).each(echo)
})
