#!/usr/bin/env ngs
{
	config('table_SecurityGroups', %[VpcId GroupId GroupName Description IpPermissions IpPermissionsEgress])

	F process_ip_perms_elt(elt) {
		ranges = elt.IpRanges.CidrIp.join(',')
		from_groups = elt.UserIdGroupPairs.map(F(u) "${u.GroupId}(${u.UserId})").join(',')

		from = econd {
			ranges == '0.0.0.0/0' ""
			ranges                " $ranges"
			from_groups           " $from_groups"
		}

		port = econd {
			elt.get('FromPort') == -1 and elt.get('ToPort') == -1 { "all" }
			'FromPort' in elt and 'ToPort' in elt and elt.FromPort == elt.ToPort { elt.FromPort }
			'FromPort' in elt and 'ToPort' in elt { "${elt.FromPort}-${elt.ToPort}" }
			true { "-" }
		}

		econd {
			(elt.IpProtocol == "-1") and (elt.IpRanges == [{'CidrIp': '0.0.0.0/0'}]) { "all" }
			elt.IpProtocol == "-1" { "all_protos$from" }
			true { "$port/${elt.IpProtocol}$from" }
		}
	}

	sgs = ``aws ec2 describe-security-groups``
	sgs.each(F(sg) {
		sg.GroupName .= limit(20, '...')
		sg.Description .= limit(20, '...')
		sg.IpPermissions .= map(process_ip_perms_elt)
		sg.IpPermissionsEgress .= map(process_ip_perms_elt)
	})
	t = Table('SecurityGroups', sgs)
	echo(t)
}
