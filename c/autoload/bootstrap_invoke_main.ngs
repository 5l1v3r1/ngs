{ type BootstrapMainDone }

F bootstrap_try_main(c:Closure, args:Arr) {
	bootstrap_debug("Trying main() candidate $c")
	try {
		# TODO: convert the arguments to the specified types
		v = c(*args)
		done = BootstrapMainDone()
		done.value = v
		throw done
	} catch(inf:ImplNotFound) {
		# That's fine
	}
}

F bootstrap_invoke_main(default) {
	main is not Arr returns default
	not(main) returns default
	if main.any((is not), Closure) {
		return default
	}
	candidate_mains = main.filter(F(m) m.ip().resolve_instruction_pointer().file == bootstrap_main_file).reverse()
	not(candidate_mains) returns default
	bootstrap_debug("Candidate main() functions: $candidate_mains")

	try {
		candidate_mains.each(bootstrap_try_main, ARGV)
	} catch(done:BootstrapMainDone) {
		done.value
	}
}
