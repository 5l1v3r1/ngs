F to_exit_code(x) 0
F to_exit_code(b:Bool) if b 0 1
F to_exit_code(n:Int) n


# *** Define bootstrap_debug function ***
bootstrap_debug =
	if 'NGS_BOOTSTRAP_DEBUG' in ENV
		F(s) echo("+ [BOOSTRAP DEBUG] $s")
	else
		F(s) {}

F bootstrap_find_ngs_dir() {
	if 'NGS_DIR' in ENV {
		return ENV['NGS_DIR']
	}
	'.'
}

F require(fname) {
	local fd, stdlib_file_len, stdlib_text
	fd = c_open(fname, 'r')
	if fd > 0 {
		bootstrap_debug("require(): opened file ${fname} as fd ${fd}")
		stdlib_file_len = c_lseek(fd, 0, "end")
		c_lseek(fd, 0, "set")
		bootstrap_debug("require(): file size of ${fname} is ${stdlib_file_len}")
		stdlib_text = c_read(fd, stdlib_file_len)
	} else {
		bootstrap_debug("require(): failed to open file $fname")
		exit(1)
	}
}

F bootstrap() {
	local do_load_stdlib = true
	local code_to_run = null

	bootstrap_debug('bootstrap.ngs begin')

	# *** Prepare ARGV ***
	# first_item = shift(array, default_value_if_array_is_empty)
	ARGV0 = ARGV.shift(null)

	# *** Parse switches ***
	if ARGV and (ARGV[0] == '-e' or ARGV[0] == '-E') {
		sw = ARGV.shift()
		code_to_run = ARGV.shift()
		bootstrap_debug("Got $sw switch, using command line provided code")
		if sw == '-E' {
			bootstrap_debug('Will skip loading stdlib because of -E flag')
			do_load_stdlib = false
		}
	}

	if 'NGS_SKIP_STDLIB' in ENV {
		bootstrap_debug('Will skip loading stdlib because of set NGS_SKIP_STDLIB environment variable')
		do_load_stdlib = false
	}

	# *** WIP: Load stdlib ***
	if do_load_stdlib {
		bootstrap_debug('Will load stdlib')
		stdlib_file = "${bootstrap_find_ngs_dir()}/stdlib.ngs"
		bootstrap_debug("Stdlib is at $stdlib_file")
		require(stdlib_file)
	}

	# *** WIP: Load the main program ***

}

bootstrap()
