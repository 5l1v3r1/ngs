# WIP, don't use!
{
	ArgvMatcher
	type BootstrapNoMatchingMain(Exception)
	type BootstrapFailedMatchMain(Exception)
}

F bootstrap_try_main(c:Closure, argv:Arr, finish:Return) {
	bootstrap_debug("Trying main() candidate $c")
	try {
		m = null
		try {
			m = argv ~ c
		} catch(e:Exception) {
			throw BootstrapFailedMatchMain("Command line arguments are invalid. Failed to match main() method.").set('cause', e)
		}
		if not(m) {
			bootstrap_debug("Trying main() candidate ${c} - no match before calling")
			return null
		}
		# echo("Matched: $m")
		v = c(*m.args, **m.kwargs)
		bootstrap_debug("Trying main() candidate ${c} - matched")
		throw finish(v)
	} catch(inf:ImplNotFound) {
		# That's fine
		inf.callable !== c throws inf
		bootstrap_debug("Trying main() candidate ${c} - no match after calling")
	}
}

F bootstrap_invoke_main(default) {
	main is not MultiMethod returns default
	candidate_mains = main.Arr().filter(F(m) m.ip().resolve_instruction_pointer().file == bootstrap_main_file).reverse()
	not(candidate_mains) returns default
	bootstrap_debug("Candidate main() functions: $candidate_mains")

	finish = Return()
	candidate_mains.each(bootstrap_try_main(X, ARGV, finish))
	# TODO: print usage examples here and exit with error code
	throw BootstrapNoMatchingMain("Command line arguments are invalid.")
}
