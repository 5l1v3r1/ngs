#!/usr/bin/env ngs
{

	tests_counter = 0

	F perform_test(test_code:Str) {
		global tests_counter
		echo("+ Test: $test_code")
		c = "{ F() { $test_code }() }"
		program_bytecode = compile(c, '<test>')
		program_func = load(program_bytecode, '<test>')
		result = program_func()
		result != true throws Error("Test failed: $test_code. Returned $result")
		tests_counter += 1
	}

	F perform_tests_in_file(file:Str) {
		# TODO: also other files
		File(file).lines(F(line) {
			# dump(line)
			if m = line ~ /^\\s*TEST (.*)/ {
				perform_test(m[1])
			}
		})
	}

	files = ['lib/bootstrap.ngs', 'lib/stdlib.ngs'] + ``find lib/autoload -name '*.ngs'``

	files.each(perform_tests_in_file)

	echo("OK. Tests: ${tests_counter}")
}
